#!/usr/bin/env zsh

function usage() {
	[[ $# -ge 1 ]] && echo >&2 error: "$@"
	cat >&2 <<EOF
Usage: ${0##*/} [--separator=<separator>] <directory>

Interactive file finder using fzf.

This script interactively searches for files, directories, and symbolic links
in a specified directory. It excludes any ".git" directories from the search,
cleans up the output paths, and uses fzf to allow the user to choose one or
multiple items interactively with a preview (using less).

Requirements:
  - zsh shell
  - fzf: A command-line fuzzy finder (https://github.com/junegunn/fzf)
  - less: For previewing file contents
EOF
	exit 2
}

separator='\n'

if [[ "$1" == --separator=* ]]; then
	separator="${1#--separator=}"
	shift
fi

if [ "$#" -lt 1 ]; then
	usage "missing positional argument <directory>"
fi

set -e

cd $1

__get_file_preview_renderer() {
	if command -v bat 2>&1 1>/dev/null; then
		echo "bat --color=always --decorations=always --style=numbers";
	elif command -v less 2>&1 1>/dev/null; then
		echo "less --LINE-NUMBERS --chop-long-lines";
	else
		echo "cat";
	fi
}

__get_directory_preview_renderer() {
	if command -v tree 2>&1 1>/dev/null; then
		echo "tree -CN";
	else
		echo "ls --color=always --almost-all";
	fi
}

MRU="/tmp/ff-mru-cache$(echo "$1" | tr ' ~./\\:' '_')"

mru_with_find() {
	if [ -f "$MRU" ]; then
		# remove any duplicates
		# double reverse here is required for
		# uniq, as it leaves only first occurence
		cat "$MRU" \
			| nl \
			| sort --key=2 --reverse \
			| uniq --skip-fields=1 \
			| sort --key=1 --numeric --reverse \
			| awk '{ print $2 }';
		echo '-----------------------------------'
	fi
	if command -v rg 2>&1 >/dev/null; then
		rg \
			--glob=!.git/ \
			--hidden \
			--files \
			--color=never \
			--sort=none;
		return;
	fi
	find . \
		-mindepth 1 \
		-path "*/.git" -prune \
		-o \( -type f -o -type d -o -type l \) \
		-print \
	| cut \
		--characters=3-
}

# -U: alias  expansion  is  suppressed  when  the function is loaded.
# -z: mark the function to be autoloaded using the zsh style
autoload -Uz is-at-least
fzf_version="${${(As: :)$(fzf --version 2>/dev/null)}[1]}"

fzf_options=()

# good for searching filenames
# source: https://github.com/junegunn/fzf/issues/191#issuecomment-93650839
fzf_options+=( --tiebreak=end )

# option --scheme added in 0.33
# source: https://github.com/junegunn/fzf/blob/62238620a50566a1941dbb250f7b9ffc3174feae/CHANGELOG.md#0330
if is-at-least 0.33 "$fzf_version"; then
	fzf_options+=( --scheme=path );
fi

mru_with_find \
	| fzf \
		"${fzf_options[@]}" \
		--layout=reverse   \
		--multi            \
		--prompt="Path > " \
		--preview="([[ -d {} ]] && $(__get_directory_preview_renderer) {}) || ([[ -f {} ]] && $(__get_file_preview_renderer) {}) || echo {}" \
		--preview-window 'right,70%,border-left' \
	| tee --append "$MRU" \
	| while read fn; do
		# Output each selected file name with proper quoting.
		printf "%s%b" ${(q)fn} ${separator}
	done
